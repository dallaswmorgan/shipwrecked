{"version":3,"sources":["webpack:///webpack/bootstrap 81afac955a1ebdc1d2f4","webpack:///./lib/shipwrecked.js","webpack:///./lib/game.js","webpack:///./lib/boat.js","webpack:///./lib/moving_object.js","webpack:///./lib/util.js","webpack:///./lib/coin.js","webpack:///./lib/mine.js","webpack:///./lib/game_view.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;ACrCA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAC;;;;;;;ACZD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAuB,aAAa;AACpC;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA,wBAAuB,uCAAuC;AAC9D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA,oBAAmB,uBAAuB;AAC1C,sBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC5GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACtBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,IAAG;;AAEH;;AAEA;;;;;;;ACxBA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACtBA;AACA;AACA;AACA;;;AAGA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qBAAoB,kBAAkB,EAAE;AACxC,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 81afac955a1ebdc1d2f4","\nconst Game = require(\"./game\");\nconst GameView = require(\"./game_view\");\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvasEl = document.getElementById(\"canvas\");\n  canvasEl.width = 500;\n  canvasEl.height = 500;\n\n  const ctx = canvasEl.getContext(\"2d\");\n  const game = new Game();\n  new GameView(game, ctx).start();\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/shipwrecked.js\n// module id = 0\n// module chunks = 0","const Boat = require('./boat');\nconst Coin = require('./coin');\nconst Mine = require('./mine');\nconst Util = require('./util');\n\nclass Game {\n  constructor() {\n    this.boats = [];\n    this.coins = [];\n    this.mines = [];\n  }\n\n  add(object) {\n    if (object instanceof Boat) {\n      this.boats.push(object);\n    } else if (object instanceof Coin) {\n      this.coins.push(object);\n    } else if (object instanceof Mine) {\n      this.mines.push(object);\n    }\n  }\n\n  randomPosition() {\n    return [\n      500 * Math.random(),\n      500 * Math.random()\n    ];\n  }\n\n  addMine() {\n    console.log('adding mine');\n    this.add(new Mine({ game: this }));\n  }\n\n  addBoat() {\n    const boat = new Boat({\n      game: this\n    });\n\n    this.add(boat);\n    return boat;\n  }\n\n  addCoin() {\n    this.add(new Coin({game: this, pos: this.randomPosition()}));\n  }\n\n  allObjects() {\n    return [].concat(this.boats, this.coins, this.mines);\n  }\n\n  draw(ctx) {\n  ctx.clearRect(0, 0, 500, 500);\n  ctx.fillStyle = \"blue\";\n  ctx.fillRect(0, 0, 500, 500);\n\n  this.allObjects().forEach((object) => {\n      object.draw(ctx);\n    });\n  }\n\n  moveObjects(delta) {\n    this.allObjects().forEach((object) => {\n      object.move(delta);\n    });\n  }\n\n  isOutOfBoundsX(pos, radius) {\n    return pos[0] < 0 + radius || pos[0] > 500 - radius;\n  }\n\n  isOutOfBoundsY(pos, radius) {\n    return pos[1] < 0 + radius || pos[1] > 500 - radius;\n  }\n\n  step(delta) {\n    console.log(delta);\n    this.moveObjects(delta);\n    this.checkCollisions();\n  }\n\n  remove(object) {\n    if (object instanceof Coin) {\n      this.coins.splice(this.coins.indexOf(object), 1);\n    } else if (object instanceof Mine) {\n      this.mines.splice(this.mines.indexOf(object), 1);\n    } else if (object instanceof Boat) {\n      this.boats.splice(this.boats.indexOf(object), 1);\n    }\n  }\n\n\n  checkCollisions() {\n    const allObjects = this.allObjects();\n    for (let i = 0; i < allObjects.length; i++) {\n      for (let j = 0; j < allObjects.length; j++) {\n        const obj1 = allObjects[i];\n        const obj2 = allObjects[j];\n        if (obj1 !== obj2 && obj1.isCollidedWith(obj2)) {\n          console.log('collision');\n          const collision = obj1.collideWith(obj2);\n          if (collision) return;\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 1\n// module chunks = 0","const MovingObject = require('./moving_object');\nconst Util = require('./util');\nclass Boat extends MovingObject {\n  constructor(options) {\n    options.vel = options.vel || [0,0];\n    options.pos = options.pos || [250, 250];\n    options.radius = 20;\n    options.color = \"orange\";\n    options.img = document.getElementById('boat');\n    super(options);\n  }\n\n  power(impulse) {\n    this.vel[0] += impulse[0];\n    this.vel[1] += impulse[1];\n  }\n\n  draw(ctx) {\n    ctx.drawImage(this.img, this.pos[0], this.pos[1], 20, 30);\n  }\n}\n\nmodule.exports = Boat;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/boat.js\n// module id = 2\n// module chunks = 0","const Util = require(\"./util\");\n\nclass MovingObject {\n  constructor(options) {\n    this.pos = options.pos;\n    this.vel = options.vel;\n    this.radius = options.radius;\n    this.color = options.color;\n    this.game = options.game;\n    this.img = options.img;\n  }\n\n  collideWith(otherObject) {\n    // default do nothing\n  }\n\n  draw(ctx) {\n    ctx.fillStyle = this.color;\n\n    ctx.beginPath();\n    ctx.arc(\n      this.pos[0], this.pos[1], this.radius, 0, 2 * Math.PI, true\n    );\n    ctx.fill();\n  }\n\n  isCollidedWith(otherObject) {\n    const centerDist = Util.dist(this.pos, otherObject.pos);\n    return centerDist < (this.radius + otherObject.radius);\n  }\n\n  move(timeDelta) {\n    //timeDelta is number of milliseconds since last move\n    //if the computer is busy the time delta will be larger\n    //in this case the MovingObject should move farther in this frame\n    //velocity of object is how far it should move in 1/60th of a second\n    const velocityScale = timeDelta / NORMAL_FRAME_TIME_DELTA;\n    let offsetX = this.vel[0] * velocityScale,\n        offsetY = this.vel[1] * velocityScale;\n\n    let newPos = [this.pos[0] + offsetX, this.pos[1] + offsetY];\n    if (this.game.isOutOfBoundsX(newPos, this.radius) &&\n        this.game.isOutOfBoundsY(newPos, this.radius)) {\n      offsetX = 0;\n      offsetY = 0;\n    } else if (this.game.isOutOfBoundsX(newPos, this.radius)) {\n      offsetX = 0;\n    } else if (this.game.isOutOfBoundsY(newPos, this.radius)) {\n      offsetY = 0;\n    }\n    this.pos = [this.pos[0] + offsetX, this.pos[1] + offsetY];\n\n  }\n\n  remove() {\n    this.game.remove(this);\n  }\n}\n\nconst NORMAL_FRAME_TIME_DELTA = 1000/60;\n\nmodule.exports = MovingObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/moving_object.js\n// module id = 3\n// module chunks = 0","const Util = {\n  // Normalize the length of the vector to 1, maintaining direction.\n  dir (vec) {\n    const norm = Util.norm(vec);\n    return Util.scale(vec, 1 / norm);\n  },\n  // Find distance between two points.\n  dist (pos1, pos2) {\n    return Math.sqrt(\n      Math.pow(pos1[0] - pos2[0], 2) + Math.pow(pos1[1] - pos2[1], 2)\n    );\n  },\n  // Find the length of the vector.\n  norm (vec) {\n    return Util.dist([0, 0], vec);\n  },\n\n  // Scale the length of a vector by the given amount.\n  scale (vec, m) {\n    return [vec[0] * m, vec[1] * m];\n  },\n\n};\n\nmodule.exports = Util;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/util.js\n// module id = 4\n// module chunks = 0","const MovingObject = require('./moving_object');\nconst Boat = require('./boat');\n\n\nclass Coin extends MovingObject {\n  constructor(options) {\n    options.radius = 200;\n    options.vel = [0, 0];\n    options.color = \"yellow\";\n    super(options);\n  }\n\n  collideWith(otherObject) {\n    if (otherObject instanceof Boat) {\n      playSound2();\n      this.remove();\n      this.game.addCoin();\n      return true;\n    }\n  }\n}\n\nmodule.exports = Coin;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/coin.js\n// module id = 5\n// module chunks = 0","const Util = require('./util');\nconst MovingObject = require('./moving_object');\nconst Boat = require('./boat');\nconst Coin = require('./coin');\n\n\nclass Mine extends MovingObject {\n  constructor(options = {}) {\n    options.color = 'black';\n    options.pos = options.pos || options.game.randomPosition();\n    options.radius = 20;\n    options.vel = options.vel || [0, 0];\n    super(options);\n  }\n\n\n  collideWith(otherObject) {\n    if (otherObject instanceof Boat) {\n      playSound1();\n      this.remove();\n      otherObject.remove();\n      alert(\"Game Over\");\n      return true;\n    } else if (otherObject instanceof Mine) {\n      playSound1();\n      this.remove();\n      otherObject.remove();\n      return true;\n    }\n  }\n}\n\nmodule.exports = Mine;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/mine.js\n// module id = 6\n// module chunks = 0","\nclass GameView {\n  constructor(game, ctx) {\n    this.ctx = ctx;\n    this.game = game;\n    this.boat = this.game.addBoat();\n    this.coin = this.game.addCoin();\n    this.game.addMine();\n  }\n\n  bindKeyHandlers() {\n    const boat = this.boat;\n\n    Object.keys(GameView.MOVES).forEach((k) => {\n      let move = GameView.MOVES[k];\n      key(k, () => { boat.power(move); });\n    });\n\n  }\n\n  start() {\n    this.bindKeyHandlers();\n    this.lastTime = 0;\n    //start the animation\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  animate(time) {\n    const timeDelta = time - this.lastTime;\n\n    this.game.step(timeDelta);\n    this.game.draw(this.ctx);\n    this.lastTime = time;\n\n    //every call to animate requests causes another call to animate\n    requestAnimationFrame(this.animate.bind(this));\n  }\n}\n\nGameView.MOVES = {\n  \"up\": [ 0, -1],\n  \"left\": [-1,  0],\n  \"down\": [ 0,  1],\n  \"right\": [ 1,  0],\n};\n\nmodule.exports = GameView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game_view.js\n// module id = 7\n// module chunks = 0"],"sourceRoot":""}